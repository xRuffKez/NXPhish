name: PhishFeed Update

on:
 workflow_dispatch:

jobs:
  update-phishfeed:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0  # Fetch complete history for git log access

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          pip install sqlite-utils
          pip install dnspython

      - name: Download PhishFeed from OpenPhish
        run: |
          echo "Downloading PhishFeed from OpenPhish..."
          wget -O openphish_feed.txt https://openphish.com/feed.txt
          echo "PhishFeed from OpenPhish downloaded successfully."

      - name: Download PhishFeed from Phishunt
        run: |
          echo "Downloading PhishFeed from Phishunt..."
          wget -O phishunt_feed.txt https://phishunt.io/feed.txt
          echo "PhishFeed from Phishunt downloaded successfully."

      - name: Combine and Sort PhishFeeds
        run: |
         echo "Combining and sorting PhishFeeds..."
         python process_feeds.py openphish_feed.txt phishunt_feed.txt
         echo "PhishFeeds combined and sorted successfully."

      - name: Ensure SQLite Database
        run: |
          echo "Ensuring SQLite Database..."
          if [ ! -f cache.db ]; then
            sqlite3 cache.db "CREATE TABLE IF NOT EXISTS domains (domain TEXT PRIMARY KEY, last_seen TEXT, status TEXT)"
          fi
          echo "SQLite Database ensured successfully."

      - name: Update Database and PhishFeed List
        run: |
          echo "Updating Database and PhishFeed List..."
          python update.py ${{ github.workspace }}
          echo "Database and PhishFeed List updated successfully."

      - name: Commit and Push Changes
        if: success()
        run: |
          echo "Committing and pushing changes..."
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add cache.db nxphish.agh
          git commit -m "Update PhishFeed List"
          git push
          echo "Changes committed and pushed successfully."
