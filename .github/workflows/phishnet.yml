name: PhishFeed Update

on:
  schedule:
    - cron: '*/10 * * * *'  # FÃ¼hre alle 15 Minuten aus

jobs:
  update-phishfeed:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install --upgrade pip && pip install -r requirements.txt

      - name: Check if Database Needs Update
        id: check_db_update
        run: |
          last_update=$(git log -1 --format="%ct" cache.db)
          current_time=$(date +%s)
          if [ $((current_time - last_update)) -gt $((15*60)) ]; then
            echo "::set-output name=update_required::true"
          else
            echo "::set-output name=update_required::false"
          fi

      - name: Run PhishFeed Update Script
        if: steps.check_db_update.outputs.update_required == 'true'
        run: python update.py ${{ github.workspace }}

      - name: Commit and Push Changes
        if: steps.check_db_update.outputs.update_required == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add cache.db nxphish.agh
          git commit -m "Update PhishFeed List"
          git push
